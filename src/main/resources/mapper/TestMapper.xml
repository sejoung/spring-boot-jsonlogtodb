<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.sejoung.api.dao.LoggerFileDao">
	<insert id="insertAdlinkRcdStatusClick" parameterType="hashmap">
		INSERT INTO ADLINK_CLICK_STATUS
		(STATS_DTTM,
		PLTFOM_TP_CODE,
		ADVRTS_PRDT_CODE,
		ADVRTS_TP_CODE,
		SITE_CODE,
		MEDIA_SCRIPT_NO,
		ADVRTS_RCMD_TP_CODE,
		ADVRTS_TP_CODE_DETAIL,
		ADVRTS_AMT,
		REG_USER_ID,
		REG_DTTM)
		VALUES
		(#{yyyymmdd},
		#{pltfom_tp_code},
		#{advrts_prdt_code},
		#{advrts_tp_code},
		#{site_code},
		#{media_script_no},
		#{advrts_rcmd_tp_code},
		#{advrts_tp_code_detail},
		#{advrts_amt},
		'recommend_gateway',
		now())
	</insert>
	
	<insert id="insertAdlinkRcdStatusView" parameterType="hashmap">
		INSERT INTO ADLINK_RCD_STATUS
		(STATS_DTTM,
		PLTFOM_TP_CODE,
		ADVRTS_PRDT_CODE,
		ADVRTS_TP_CODE,
		SITE_CODE,
		MEDIA_SCRIPT_NO,
		ADVRTS_RCMD_TP_CODE,
		ADVRTS_TP_CODE_DETAIL,
		TOT_EPRS_CNT,
		CLICK_CNT,
		ADVRTS_AMT,
		REG_USER_ID,
		REG_DTTM)
		VALUES
		(#{yyyymmdd},
		#{pltfom_tp_code},
		#{advrts_prdt_code},
		#{advrts_tp_code},
		#{site_code},
		#{media_script_no},
		#{advrts_rcmd_tp_code},
		#{advrts_tp_code_detail},
		#{tot_eprs_cnt},
		#{click_cnt},
		#{advrts_amt},
		'recommend_gateway',
		now())
	</insert>
	
	
 	<insert id="insertMobCnvrsStats" parameterType="hashmap">
		INSERT INTO MOB_CNVRS_STATS
		(STATS_DTTM,
		PLTFOM_TP_CODE,
		ADVRTS_PRDT_CODE,
		ADVRTS_TP_CODE,
		SITE_CODE,
		MEDIA_SCRIPT_NO,
		ADVRTS_RCMD_TP_CODE,
		ADVRTS_TP_CODE_DETAIL,
		ORDER_NO,
		CLICK_TP,
		SESION_SELNG_YN,
		DIRECT_YN,
		MOB_ORDER_YN,
		CNVRS_TP_CODE,
		ORDER_AMT,
		ORDER_CNT.
		ORDER_QY,   
		REG_USER_ID,
		REG_DTTM)
		VALUES
		(#{yyyymmdd},
		#{pltfom_tp_code},
		#{advrts_prdt_code},
		#{advrts_tp_code},
		#{site_code},
		#{media_script_no},
		#{advrts_rcmd_tp_code},
		#{advrts_tp_code_detail},
		#{order_no},
		#{click_tp},
		#{sesion_selng_yn},
		#{direct_yn},
		#{mob_order_yn},
		#{cnvrs_tp_code},
		#{order_amt},
		#{order_cnt},
		#{order_qy},
		'recommend_gateway',
		now())
	</insert>
	
	<insert id="insertTest" parameterType="hashmap">
		INSERT INTO test
		(pltfom_tp_code,
		pcode,
		auid,
		ip,
		regdate,
		yyyymmdd)
		VALUES
		(
		#{pltfom_tp_code},
		#{pcode},
		#{auid},
		#{ip},
		#{regdate, typeHandler=org.joda.time.mybatis.handlers.DateTimeTypeHandler},
		#{yyyymmdd})
	</insert>


	<update id="updatetest" parameterType="hashmap">
		update test set testcol ='recommend_gateway'
	</update>
	
	<select id="selectPcode" parameterType="hashmap" resultType="string">
		select pcode from test
			<if test="pltfom_tp_code != 'all'">
				where pltfom_tp_code = #{pltfom_tp_code}
			</if>
		group by pcode
	</select>

	<insert id="insertWebpcode" parameterType="hashmap">
		INSERT INTO webpcode
		(pcode,
		pcode1,
		cnt)
		VALUES
		(
		#{pcode},
		#{pcode1},
		#{cnt})
	</insert>


	<insert id="insertPcode" parameterType="hashmap">
		INSERT INTO pcode
		(pcode,
		pcode1,
		cnt)
		VALUES
		(
		#{pcode},
		#{pcode1},
		#{cnt})
	</insert>
	
	
	<insert id="insertMopcode" parameterType="hashmap">
		INSERT INTO mopcode
		(pcode,
		pcode1,
		cnt)
		VALUES
		(
		#{pcode},
		#{pcode1},
		#{cnt})
	</insert>
	
	
	 <select id="selectPcodes" parameterType="string" resultType="hashmap">
		SELECT pcode1, cnt FROM (
			SELECT  AA.pcode as pcode1
			       ,COUNT(*) AS cnt
			FROM   test AA
			INNER JOIN (select  auid
			            from    test
			            where pcode = #{pcode}
			            group by auid) BB ON (BB.auid = AA.auid)
			GROUP BY AA.pcode
		) AA
	</select>
	
	
</mapper>